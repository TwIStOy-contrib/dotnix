[
  {
    "context": "VimControl && Workspace",
    "bindings": {
      "space f t": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      "[ e": null,
      "] e": null,
      "ctrl-]": null,
      "g r n": null,
      "g r r": null,
      "g r i": null,
      "g r a": null,
      "g h": null,
      "g shift-s": null,
      "ctrl-k": "editor::MoveLineUp",
      "ctrl-j": "editor::MoveLineDown",
      "[ c": "editor::GoToPreviousDiagnostic",
      "] c": "editor::GoToDiagnostic",
      "g shift-r": "editor::Rename",
      "g r": "editor::FindAllReferences",
      "g i": "editor::GoToImplementation",
      "g d": "editor::GoToDefinition",
      "g t": "editor::GoToTypeDefinition",
      "g shift-d": "editor::GoToDeclaration",
      "K": "editor::Hover",
      "space s s": "project_symbols::Toggle",
      "space f c": "editor::Format",
      "ctrl-w -": "pane::SplitHorizontal",
      "space w -": "pane::SplitHorizontal",
      "ctrl-w |": "pane::SplitVertical",
      "space w |": "pane::SplitVertical",
      "space 1": ["workspace::ActivatePane", 0],
      "space 2": ["workspace::ActivatePane", 1],
      "space 3": ["workspace::ActivatePane", 2],
      "space 4": ["workspace::ActivatePane", 3],
      "space 5": ["workspace::ActivatePane", 4],
      "space 6": ["workspace::ActivatePane", 5],
      "space q": "pane::CloseActiveItem",
      "space c h": "pane::CloseOtherItems",
      "] ]": "editor::GoToNextDocumentHighlight",
      "[ [": "editor::GoToPreviousDocumentHighlight"
    }
  },
  {
    "context": "VimControl && !menu && Editor && (extension == h || extension == cpp || extension == c || extension == hpp)",
    "bindings": {
      "space f a": "editor::SwitchSourceHeader"
    }
  },
  {
    "context": "(Editor && edit_prediction)",
    "bindings": {
      "tab": null,
      "alt-tab": null,
      "ctrl-l": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "enter": "project_panel::Open"
    }
  },
  {
    "context": "(Editor && edit_prediction_conflict)",
    "bindings": {
      "alt-tab": null,
      "ctrl-l": "editor::AcceptEditPrediction"
    }
  }
]
